name: üèõÔ∏è B√∫squeda Diaria de Archivos del Vaticano

on:
  schedule:
    # Se ejecuta cada d√≠a a las 03:00 UTC
    - cron: "0 3 * * *"
  workflow_dispatch: # Permite la ejecuci√≥n manual

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permiso para hacer 'git push'

    steps:
      - name: 1. Checkout del repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 2. Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: 3. Instalar dependencias con uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

          # --- ¬°AQU√ç EST√Å LA CORRECCI√ìN! ---
          # A√±adimos --system para instalar en el entorno global del runner
          uv pip install pandas requests beautifulsoup4 markdownify tqdm lxml --system

      - name: 4. Ejecutar el script de archivado
        run: |
          # Usamos 'python' directamente, ya que tu script usa un __main__
          # 'uv run' es m√°s para scripts definidos en pyproject.toml
          python vatican_archiver.py

      - name: 5. Configurar Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions-bot@users.noreply.github.com"

      - name: 6. Hacer commit y push de los cambios
        run: |
          git pull --before

          # Carpetas de salida de tu script
          git add vatican-archiver
          git add documents/

          if git diff --staged --quiet; then
            echo "‚úÖ No se encontraron nuevos documentos para guardar."
          else
            COMMIT_DATE=$(date +'%Y-%m-%d')
            git commit -m "üèõÔ∏è Archivo del Vaticano - Actualizaci√≥n diaria ($COMMIT_DATE)"
            git push
            echo "üöÄ Nuevos archivos guardados en el repositorio."
          fi
