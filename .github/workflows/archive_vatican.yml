name: üèõÔ∏è B√∫squeda Diaria de Archivos del Vaticano

on:
  schedule:
    # Ejecuta el script todos los d√≠as a las 18h CEST, UTC = 16h
    - cron: "0 12 * * *" # Cada d√≠a a las 15:00 UTC (18:00 CEST)
  workflow_dispatch: # Permite ejecutar el workflow manualmente

jobs:
  run_script_and_commit: # Renombrado para mayor claridad
    runs-on: ubuntu-latest
    # Necesitamos permisos para escribir en el repositorio
    permissions:
      contents: write # Permite a la acci√≥n hacer commit y push
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      USER_POOL_ID: ${{ secrets.USER_POOL_ID }}
      SUMMARIES_FOLDER: web/data/summaries
      S3_BUCKET_NAME: igles-ia-spotify
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Necesitamos el token para poder hacer push m√°s adelante
          # Tambi√©n puedes usar un PAT (Personal Access Token) si tienes configuraciones espec√≠ficas
          # token: ${{ secrets.PAT_TOKEN }} # Descomentar si usas un PAT en lugar del GITHUB_TOKEN por defecto
          fetch-depth: 0 # Obtiene todo el historial para que git sepa en qu√© rama est√°

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12" # O la versi√≥n que est√©s usando

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install dependencies with uv
        run: uv pip install . --system # Asumiendo que tu pyproject.toml est√° configurado
      - name: Run the script
        run: |
          echo "Running script..."
          uv run vatican-archiver/vatican_archiver.py
          make update_superbase

      # El paso de "Upload results" como artefacto sigue siendo √∫til para
      # acceder r√°pidamente a los archivos de una ejecuci√≥n espec√≠fica sin navegar por los commits.
      - name: Configure Git user
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions-bot@users.noreply.github.com" # Email v√°lido para bots de GitHub

      - name: Commit and push changes
        run: |
          git pull 
          git add vatican-archiver
          # Comprueba si hay algo para confirmar
          if git diff --staged --quiet; then
            echo "‚úÖ No se encontraron nuevos documentos para guardar."
          else
            COMMIT_DATE=$(date +'%Y-%m-%d')
            git commit -m "üèõÔ∏è Archivo del Vaticano - Actualizaci√≥n diaria ($COMMIT_DATE)"
            git push
            echo "üöÄ Nuevos archivos guardados en el repositorio."
          fi
        # La autenticaci√≥n para git push se maneja autom√°ticamente por actions/checkout@v4
        # cuando se usa el GITHUB_TOKEN impl√≠cito (gracias a `permissions: contents: write`)
        # o un token expl√≠cito.
